# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: CI/CD Java Spring Dinámico

on:
  push:
    branches:
      - main

jobs:
  build:

    env:
      REPO_NAME: ${{ github.event.repository.name }}
      JAVA_VERSION: '17'

    runs-on: ubuntu-latest

    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Configurar version de Java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'

      # --- PASO CLAVE: EXTRAER LA VERSIÓN DEL POM.XML ---
      - name: Obtener la Versión del Proyecto desde pom.xml
        id: get_version
        run: |
          # El comando de Maven evalúa la expresión ${project.version} y la imprime.
          # Luego la redirigimos al archivo $GITHUB_ENV para que esté disponible en los siguientes pasos
          PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$PROJECT_VERSION" >> $GITHUB_ENV
          
          # También definimos el nombre completo del JAR y de la Imagen para el resto del flujo
          echo "JAR_FILE_NAME=${{ env.REPO_NAME }}-$PROJECT_VERSION.jar" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_NAME=${{ env.REPO_NAME }}" >> $GITHUB_ENV
          
          echo "::notice::Versión del proyecto: $PROJECT_VERSION"
          
      - name: Compilar y Ejecutar pruebas (JUnit y JaCoCo)
        # Ahora el flujo sabe la versión y puede usarla en el JAR
        run: mvn -B verify

      - name: Empaquetar el JAR
        run: mvn -B package -DskipTests

      # - name: Step 4 - List the current directory
      #   run: dir

      # - name: Step 5 - What is in the target folder
      #   run: |
      #     cd target
      #     dir

#      - name: Step 6 - Run project
#        run: mvn spring-boot:run
#
#      - name: Upload artifact for deployment job
#        uses: actions/upload-artifact@v2
#        with:
#          name: java-app
#          path: '${{ github.workspace }}/target/*.jar'
#
#  deploy:
#    runs-on: windows-latest
#    needs: build
#    environment:
#      name: 'Production'
#      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
#
#    steps:
#      - name: Download artifact from build job
#        uses: actions/download-artifact@v2
#        with:
#          name: java-app
#
#      - name: Deploy to Azure Web App
#        id: deploy-to-webapp
#        uses: azure/webapps-deploy@v2
#        with:
#          app-name: 'employee-example-devops'
#          slot-name: 'Production'
#          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_91FB24DF2BD4406F936D7B4AD5A1DB65 }}
#          package: '*.jar'
